    #channels {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
      }
  
      .channelsListElem {
        /* horizontal menu */
        float: left;
  
        --elem-accent: transparent;
        box-shadow: inset var(--elem-accent) 0px -3px;
      }
  
      .channelsListElem a {
        display: block;
        padding: 10px 14px;
        color: var(--channel-hover-color);
        filter: saturate(0.8);
        text-decoration: none;
        text-align: center;
      }
  
      .channelsListElem a:focus {
        outline-offset: -1px;
      }
  
      /* prevents layout changes when text becomes bold by having a hidden bold text block there so layout is calculated with that */
      .channelsListElem a::after {
        display: block;
        content: attr(title);
        font-weight: bold;
        height: 0;
        overflow: hidden;
        visibility: hidden;
      }
  
      .channelsListElem:hover {
        box-shadow: inset var(--channel-hover-color) 0px -3px;
      }
  
      .channelsListElem[data-active=true] {
        font-weight: bold;
        box-shadow: inset var(--active-channel-color) 0px -3px;
      }
  
      .channelsListElem[data-active=true] a {
        color: var(--active-channel-color);
      }

      .active-marker-container {
        position: relative;
        bottom: 3px;
        margin: auto;
        width: 9px;
        height: 0;
        fill: var(--active-channel-color);
      }
  
      /* force flexbox-wrap to wrap at least two channels by inserting break in range
      see https://stackoverflow.com/questions/29732575/how-to-specify-line-breaks-in-a-multi-line-flexbox-layout*/
      @media screen and (min-width: 600px) and (max-width: 830px) {
        #channels::before {
          content: '';
          width: 100%;
          order: 1;
        }
        .channelsListElem:nth-child(n + 8) {
          order: 1;
        }
    }

    /* 3 col grid for very small widths */
    @media screen and (max-width: 500px) {
      #channels {
        display: grid;
        grid-template-columns: min-content min-content min-content;
      }
    }